{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport { createFilter } from 'rollup-pluginutils';\nimport posthtml from 'posthtml';\nimport matchHelper from 'posthtml-match-helper';\n\n\nconst pluginName = 'posthtml-multi';\n\n\nexport default function({\n\textract = false,\n\tfileName = '[name].[ext]',\n\twatch = false,\n\timportPath,\n\toptions: optionList = [{}],\n}) {\n\tconst output = {};\n\tlet options = Array.isArray(optionList)\n\t\t? optionList\n\t\t: [optionList];\n\n\tfor (let config of options) {\n\t\tconfig._filter = config.include\n\t\t\t? createFilter(config.include, config.exclude)\n\t\t\t: createFilter('**/*.html', config.exclude);\n\t}\n\n\n\tconst plugin = {\n\t\tname: pluginName,\n\n\t\tasync resolveImport(filePath, from) {\n\t\t\t// eslint-disable-next-line multiline-ternary\n\t\t\tconst parent = from ? from : filePath;\n\t\t\tif (path.isAbsolute(filePath) && await fs.pathExists(filePath)) return filePath;\n\t\t\tif (importPath) {\n\t\t\t\tconst fromImportPath = path.join(path.resolve(importPath), filePath);\n\t\t\t\tif (await fs.pathExists(fromImportPath)) return fromImportPath;\n\t\t\t}\n\t\t\tconst fromCWD = path.resolve(filePath);\n\t\t\tconst fromEntry = path.join(path.resolve(path.dirname(parent)), filePath);\n\t\t\tif (await fs.pathExists(fromCWD)) return fromCWD;\n\t\t\telse if (await fs.pathExists(fromEntry)) return fromEntry;\n\t\t\treturn null;\n\t\t},\n\n\t\tposthtmlHook(from, context) {\n\t\t\treturn (tree) => new Promise((resolve) => {\n\t\t\t\tconst promises = [];\n\t\t\t\ttree.match(matchHelper('module[href],include[src],extends[src]'), (node) => {\n\t\t\t\t\tpromises.push(new Promise((resolveTask) => {\n\t\t\t\t\t\tconst href = node.attrs.href\n\t\t\t\t\t\t\t? node.attrs.href\n\t\t\t\t\t\t\t: node.attrs.src;\n\t\t\t\t\t\tthis.resolveImport(href, from).then((nodePath) => {\n\t\t\t\t\t\t\tif (nodePath !== null) {\n\t\t\t\t\t\t\t\tcontext.addWatchFile(nodePath);\n\t\t\t\t\t\t\t\tfs.readFile(nodePath).then((code) => {\n\t\t\t\t\t\t\t\t\tposthtml([this.posthtmlHook(nodePath, context)])\n\t\t\t\t\t\t\t\t\t\t.process(code)\n\t\t\t\t\t\t\t\t\t\t.then(() => resolveTask())\n\t\t\t\t\t\t\t\t\t\t.catch((err) => context.error(err));\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch((err) => context.error(err));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch((err) => context.error(err));\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t\tPromise.all(promises).then(() => resolve(tree))\n\t\t\t\t\t.catch((err) => context.error(err));\n\t\t\t});\n\t\t},\n\n\t\tasync transform(code, id) {\n\t\t\tlet matchingConfigs = [];\n\n\t\t\tfor (let config of options) {\n\t\t\t\tif (config._filter(id)) {\n\t\t\t\t\tmatchingConfigs.push(config);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!matchingConfigs.length) return null;\n\n\t\t\tfor (let config of matchingConfigs) {\n\t\t\t\tif (!Array.isArray(output[id])) output[id] = [];\n\t\t\t\toutput[id].push((await posthtml(config.plugins || []).process(code, {\n\t\t\t\t\tparser: config.parser,\n\t\t\t\t\tdirectives: config.directives,\n\t\t\t\t})).html);\n\t\t\t\tif (watch) {\n\t\t\t\t\tawait posthtml([plugin.posthtmlHook(id, this)]).process(code, {\n\t\t\t\t\t\tparser: config.parser,\n\t\t\t\t\t\tdirectives: config.directives,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t// eslint-disable-next-line multiline-ternary\n\t\t\t\tcode: extract ? '' : `export default ${JSON.stringify(output[id][0])}`,\n\t\t\t\tmap: { mappings: '' },\n\t\t\t};\n\t\t},\n\n\t\tasync generateBundle(opts, bundle, isWrite) {\n\t\t\tif (!isWrite || !extract) return;\n\n\t\t\tconst genName = (file, iteration = 0) => {\n\t\t\t\tconst baseDir = opts.dir || path.dirname(opts.file);\n\t\t\t\tconst dir = typeof extract === 'string'\n\t\t\t\t\t// eslint-disable-next-line no-extra-boolean-cast\n\t\t\t\t\t? !!path.extname(extract)\n\t\t\t\t\t\t? path.dirname(extract)\n\t\t\t\t\t\t: extract\n\t\t\t\t\t: baseDir;\n\t\t\t\tconst fileParts = path.parse(`${path.basename(file, path.extname(file))}.html`);\n\t\t\t\tlet finalName = fileName.replace('[name]', fileParts.name)\n\t\t\t\t\t.replace('[ext]', fileParts.ext.substr(1))\n\t\t\t\t\t.replace('[extname]', fileParts.ext);\n\t\t\t\tfinalName = finalName.includes('[fileNo]')\n\t\t\t\t\t// eslint-disable-next-line multiline-ternary\n\t\t\t\t\t? finalName.replace('[fileNo]', iteration ? iteration : '')\n\t\t\t\t\t: iteration\n\t\t\t\t\t\t? `${path.basename(finalName, '.html')}_${iteration}.html`\n\t\t\t\t\t\t: finalName;\n\t\t\t\tfinalName = path.resolve(dir, finalName);\n\t\t\t\treturn finalName;\n\t\t\t};\n\n\t\t\tfor (let [id, codeList] of Object.entries(output)) {\n\t\t\t\tfor (let i = 0; i < codeList.length; i++) {\n\t\t\t\t\tlet assetName = genName(id, i);\n\t\t\t\t\tlet codeFile = {\n\t\t\t\t\t\tfileName: assetName,\n\t\t\t\t\t\tisAsset: true,\n\t\t\t\t\t\tsource: codeList[i],\n\t\t\t\t\t};\n\t\t\t\t\tbundle[assetName] = codeFile;\n\t\t\t\t\tdelete output[id];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\treturn plugin;\n}\n"],"names":["pluginName","ref","const","output","options","Array","isArray","optionList","let","config","_filter","include","createFilter","exclude","plugin","name","resolveImport","filePath","from","parent","path","isAbsolute","fs","pathExists","importPath","fromImportPath","join","resolve","fromCWD","fromEntry","dirname","posthtmlHook","context","tree","Promise","promises","match","matchHelper","node","push","resolveTask","href","attrs","src","this","then","nodePath","addWatchFile","readFile","code","posthtml","process","catch","err","error","all","transform","id","matchingConfigs","length","plugins","parser","directives","html","watch","extract","JSON","stringify","map","mappings","generateBundle","opts","bundle","isWrite","genName","file","iteration","baseDir","dir","extname","fileParts","parse","basename","finalName","fileName","replace","ext","substr","includes","Object","entries","i","codeList","assetName","codeFile","isAsset","source"],"mappings":"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"}